/* stylelint-disable */

/* [Filter / Sort]
-------------------------------------------------------*/
// viewport height all mobile wrappers
.ExpandablePanel--mobile {
  #js-CollectionFilterMobile,
  .CollectionFilterSort,
  .ExpandablePanel--wrapper {
    height: 100%;
  }
}

.CollectionFilterSort .FilterSort .Button--tall {
  padding: 3px;
  height: 44px;
  width: 44px;
  font-size: 12px;
}

.ExpandablePanel--mobile .FilterSort {
  height: 1000px;
}

.FilterSort__border {
  border: 2px solid $c-black;
}

.FilterSort__mobileTriggerBtn {
  padding: 8px 0;
  text-align: center;
  cursor: pointer;
  display: block;
  width: 100%;
  text-transform: uppercase;
}

.FilterSort__final {
  margin-top: 14px;
  margin-bottom: 30px;
}

.FilterSort__summary {
  text-transform: uppercase;
  text-align: center;
  font-weight: 600;
}

.ExpandablePanel--mobile {
  display: block;
  position: fixed;
  overflow-y: scroll;
  background: $c-white;
  z-index: 999;
  height: 100%;
  width: 100%;
  top: 0;
  transition: transform 600ms cubic-bezier(0.480, 0.110, 0.250, 1.060);
  transform: translateX(100%);

  &--isOpen {
    transform: translateX(0%);
  }

  //Heading
  .ExpandablePanel__heading {
    text-align: center;
    margin-top: 5px;
  }

  // Add background to the filter-reset trigger
  .ExpandablePanel__clearAllWrapper {
    margin: 10px 0;
    background: $c-neutral-2;
    padding: 3px 0 8px;
    display: block;
    text-align: center;
  }

  // Trigger to reset all filters
  .ExpandablePanel__clearAll {
    color: $c-neutral-8;
    float: none;
    position: initial;
    text-align: center;
    font-weight: 600;
  }

  // Attach the action buttons to the bottom of screen
  .ExpandablePanel__action {
    width: 100%;
    position: sticky;
    bottom: 0;
  }

  .ExpandablePanel__filterTriggers--cancel-apply {
    display: flex;
    width: 100%;
  }

}

// Action buttons
.ExpandablePanel__btn {
  cursor: pointer;
  display: inline-block;
  background: $c-black;
  color: $c-white;
  border: 1px solid $c-black;
  text-transform: uppercase;
  text-align: center;
  padding: 10px;
  width: 50%;

  &--fullWidth {
    width: 100%;
  }

  &:hover,
  &:focus,
  &:active {
    color: $c-white;
  }

  &--secondary {
    background: $c-white;
    color: $c-black;

    &:hover,
    &:focus,
    &:active {
      color: $c-black;
    }

  }

}

//Heading
.ExpandablePanel__heading {
  margin-bottom: 5px;
  text-align: left;
}

// Panel title
.ExpandablePanel__mainTitle {
  font-size: 1.45em;
  display: inline-block;
  font-weight: 300;
  padding: 0 30px;

  @include xs {
    padding: 0 30px;
  }

  @include sm {
    padding: 0;
  }
}

// Trigger to reset all filters
.ExpandablePanel__clearAll {
  color: $c-neutral-8;
  font-size: 0.75em;
  text-transform: uppercase;
  float: right;
  position: relative;
  top: 18px;
}

.ExpandablePanel__clearAllWrapper {
  display: inline;
}


.ExpandablePanel--wrapper {

  input[type="checkbox"] {
    display: none;
  }

}

// Container of each item / filter
.ExpandablePanelItem {
  max-height: 60px;
  background: $c-white;
  padding: 10px 30px;
  position: relative;
  cursor: pointer;
  transition: max-height 1.5s ease-in-out;

  .ExpandablePanelItem__revealed-content{
    opacity: 0;
    transition: opacity 0.5s ease-out;
  }

  &--is-active {
    // Just a very tall value, so we can animate it smoothly
    max-height: 9999px;

    .ExpandablePanelItem__revealed-content{
      opacity: 1;
    }

  }

  // When a filter is expanded...
  &--is-active .ExpandablePanel__name:before {
    transform: rotate(90deg);
    top: 4px;
    left: -4px;
  }

  // Filter is expanded => Show its options
  &--is-active .ExpandablePanel__listOptions {
    display: block;
  }
  // Filter is expanded => Show its options
  &--is-active .ExpandablePanel__selectedOptions {
    opacity: 0;
  }


  // Secondary filters
  &--secondary {
    padding: 6px 0 0;
    border-top: 0;

    .ExpandablePanel__name {
      font-size: 1.5rem;
      text-transform: none;
      font-weight: 400;
    }

  }

}

@include sm {
  .ExpandablePanelItem {
    padding: 0px;
  }
}

.ExpandablePanelItem__item-bar {
  border-bottom: 1px solid $c-neutral-4;
  padding: 20px 15px 8px 0;
}

// Hide top border from first filter
.ExpandablePanelItem:nth-child(2) {
  border-top: 0;
}

// Wrapper for secondary Filters
.ExpandablePanel__secondaryFiltersWrapper {
  border-top: 1px solid $c-neutral-4;
  padding-top: 10px;
}

// Two-column layout
.ExpandablePanel__listTwoColumns {
  display: flex;
  flex-wrap: wrap;
}

// Fill half of the container
.ExpandablePanel__listColumn {
  flex: 1 0 50%;
  box-sizing: border-box;
  padding-right: 15px;
  position: relative;
}

// Filter name
.ExpandablePanel__name {
  font-weight: 600;
  text-transform: uppercase;
  display: inline-block;
  padding-left: 10px;
}

// List of selected options
.ExpandablePanel__selectedOptions {
  color: $c-neutral-8;
  float: right;
  max-width: 130px;
  opacity: 1;
  transition: 0.3s opacity;
}

// Each selected item
.ExpandablePanel__selectedItem {
  font-size: 0.75em;

  // Separate each item by comma (except the very last one)
  &:not(:last-child):after {
    content: ", ";
  }

}

// List of available options
.ExpandablePanel__listOptions {
  padding: 0 0 15px 13px;
  display: none;

  a {
    color: $c-neutral-8;
    text-transform: uppercase;
  }

  // Color panels need a different left padding
  &--panelColors,
  &--panelColors .ExpandablePanel__moreOptions {
    padding-left: 10px;
  }

  // TODO: if this is needed elsewhere then it should become a global helper
  input[type="checkbox"]:checked {

    ~ .ExpandablePanel__optionCheck--tick {
      outline: 2px solid $c-black;
      outline-offset: 1px;

      &.inverse::after {
        color: $c-neutral-12;
      }

      // Black font-color for very light bg colors
      &.color-white::after {
        color: $c-black;
      }

    }

  }

}

// Option label
.ExpandablePanel__option {
  text-align: left;
  padding: 1px 0;
  font-weight: 400;
  font-size: 0.95em;
  text-transform: capitalize;
  cursor: pointer;
  line-height: 1.7;
  // &.two-col {
  //   width: 50%;
  //   float: left;
  // }
}

// Custom checkbox
.ExpandablePanel__optionCheck {

  // Rounded checkbox / radio
  &--rounded {
    height: 14px;
    width: 14px;
    margin-right: 10px;
    display: inline-block;
    position: relative;
    top: 2px;
  }

  &--light {
    border: 1px solid rgb(119, 119, 119);
  }

}

// Fallback for colors with no background defined
.ExpandablePanel__optionColorFallback {
  background: $c-neutral-4;
  display: inline-block;
  position: absolute;
  height: 14px;
  width: 14px;
  top: 3px;
}

// Trigger to load more filter options
.ExpandablePanel__moreOptions {
  font-size: 0.65em;
  margin-top: 15px;
}

// List of additional options
.ExpandablePanel__moreOptionsList {
  display: none;

  &--is-active {
    display: block;
  }

}

.CollectionSortApp {
  border-bottom: 1px solid $c-neutral-4;
  padding-bottom: 14px;
  margin-bottom: 14px;
  min-height: 50px;
  display: none;
}

.CollectionSort {
  width: 275px;
  padding-right: 15px;
  float: right;
  .Select--wrapper {
    font-weight: bold;
    text-transform: uppercase;
  }
}

@include sm {
  .CollectionSortApp {
    display: block;
  }
}

.CollectionSortMobile ul {
  list-style: none;
    padding: 0;
}

.CollectionSortMobile li {
  cursor: pointer;
  height: 40px;
  line-height: 40px;
  padding: 0 30px;
  text-transform: uppercase;
  border-bottom: 1px solid $c-neutral-4;
  font-weight: 500;
  color: #9a9a9a;

  &.is-active {
    color: $c-neutral-12;
    font-weight: 600;
  }

  &:first-child {
    border-top: 1px solid $c-neutral-4;
  }
}

.ExpandablePanel-filter--mobile .ExpandablePanel__name {
  font-size: 1.6rem;
}

.CollectionSortMobile .ExpandablePanel__btn {
  width: 100%;
}

.CollectionSortMobile .ExpandablePanel__action {
  position: fixed;
}

.checkboxBlackBg {

  label {
    display: block;
  }

  .checkboxBlackBg__check {
    display: inline-block;
    position: relative;
    width: 100%;
    padding-left: 20px;
    cursor: pointer;

    &::before {
      content: "";
      display: inline-block;
      position: absolute;
      padding: 4px;
      left: 0;
      top: 6px;
      border: 1px solid $c-black;
      background-color: $c-white;
    }

  }

  input[type="checkbox"] {
    opacity: 0;

    &:disabled ~ .checkboxBlackBg__check {
      opacity: 0.65;

      &::before {
        background-color: $c-neutral-8;
        cursor: not-allowed;
      }

    }

    &:checked ~ .checkboxBlackBg__check::before {
      background-color: $c-black;
    }

  }

}
