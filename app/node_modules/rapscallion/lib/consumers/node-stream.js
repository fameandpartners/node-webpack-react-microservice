"use strict";

var _require = require("stream"),
    Readable = _require.Readable;

var _require2 = require("../sequence"),
    EXHAUSTED = _require2.EXHAUSTED;

var _require3 = require("./common"),
    pullBatch = _require3.pullBatch,
    INCOMPLETE = _require3.INCOMPLETE;

/**
 * Consumes the provided sequence and pushes onto a readable Node stream.
 *
 * @param      {Renderer}  renderer        The Renderer from which to pull next-vals.
 *
 * @return     {Readable}                  A readable Node stream.
 */


function toNodeStream(renderer) {
  var sourceIsReady = true;

  var read = function read() {
    // If source is not ready, defer any reads until the promise resolves.
    if (!sourceIsReady) {
      return;
    }

    sourceIsReady = false;
    var pull = pullBatch(renderer, stream);

    pull.then(function (result) {
      sourceIsReady = true;
      if (result === EXHAUSTED) {
        stream.push(null);
      } else {
        if (result !== INCOMPLETE) {
          stream.push(result);
        }
        read();
      }
    }).catch(function (err) {
      stream.emit("error", err);
    });
  };

  var stream = new Readable({ read });

  return stream;
}

module.exports = toNodeStream;